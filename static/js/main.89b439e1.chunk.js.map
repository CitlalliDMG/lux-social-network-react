{"version":3,"sources":["components/global/img/logotipo-lux-login.png","components/global/img/google-logo-icon-PNG-Transparent-Background.png","components/SignUp.js","components/SignIn.js","components/PasswordForget.js","firebase/firebase.js","firebase/auth.js","components/Navigation.js","components/PostInput.js","components/DisplayPost.js","components/Home.js","components/Account.js","components/Page404.js","components/App.js","constants/routes.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SignUpPage","react_default","a","createElement","SignInPage","_this","this","className","src","logo","alt","id","type","onClick","props","onLogin","iconGoogle","Component","PasswordForgetPage","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","db","database","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSignInWithGoogle","signInWithRedirect","Navigation","href","height","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","user","displayName","aria-labelledby","photoURL","onLogout","PostInput","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","state","currentPost","username","bind","assertThisInitialized","handleSubmit","preventDefault","postRef","ref","post","postText","push","isInvalid","trim","onSubmit","placeholder","onChange","disabled","DisplayPost","posts","_this2","on","snapshot","val","newState","postId","concat","remove","_this3","map","key","removePost","reverse","HomePage","logout","console","log","then","login","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","result","stop","onAuthStateChanged","Fragment","src_components_Navigation","src_components_PostInput","src_components_DisplayPost","components_SignIn","AccountPage","Page404","App","BrowserRouter","basename","process","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89b439e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logotipo-lux-login.c2616f55.png\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-icon-PNG-Transparent-Background.0dd54f85.png\";","import React from 'react';\n\nconst SignUpPage = () =>\n  <div>\n    <h1>SignUp Page</h1>\n  </div>\n\nexport default SignUpPage;","import React, { Component } from \"react\";\n\nimport logo from \"./global/img/logotipo-lux-login.png\";\nimport iconGoogle from \"./global/img/google-logo-icon-PNG-Transparent-Background.png\";\nimport './SignIn.css'\n\nclass SignInPage extends Component {\n  render() {\n    return (\n      <main className=\"container col-8\">\n        <img src={logo} alt=\"logo-lux\" id=\"logo-index\" />\n        <h1>\"No hay logro pequeño, ni paso que no cuente.\"</h1>\n        <p>\n          Encuentra en LUX un espacio seguro y la motivación para atravesar esos\n          momentos difíciles, al leer y compartir las pequeñas metas que\n          iluminan tu día a día.\n        </p>\n        <button type=\"button\" id=\"btn-google\" onClick={() => this.props.onLogin()}>\n          <img src={iconGoogle} alt=\"icon-google\" />\n          Google\n        </button>\n      </main>\n    );\n  }\n}\n\nexport default SignInPage;\n","import React from 'react';\n\nconst PasswordForgetPage = () =>\n  <div>\n    <h1>Password Forget Page</h1>\n  </div>\n\nexport default PasswordForgetPage;","// Initialize Firebase\nimport firebase from \"firebase\";\nimport 'firebase/auth';\n\nvar config = {\n  apiKey: \"AIzaSyCanJmFf7FSXRnvHWfjqbeoIg1AHkG7wrk\",\n  authDomain: \"fun-food-friends-ad0f7.firebaseapp.com\",\n  databaseURL: \"https://fun-food-friends-ad0f7.firebaseio.com\",\n  projectId: \"fun-food-friends-ad0f7\",\n  storageBucket: \"\",\n  messagingSenderId: \"856546701734\"\n};\n\nif(!firebase.apps.length) {\n    firebase.initializeApp(config);\n}\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst auth = firebase.auth();\nconst db = firebase.database();\n\nexport {\n    provider,\n    auth,\n    db\n};\n","import { auth, provider } from './firebase';\n\n// Sign Up function\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n// Sign In function\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\n// Sign Out function\nexport const doSignOut = () => auth.signOut();\n\n// Password Reset\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\n\n// Password Change\nexport const doPasswordUpdate = password =>\n  auth.currentUser.updatePassword(password);\n\n// Sign in Google\nexport const doSignInWithGoogle = () => {\n    auth.signInWithRedirect(provider)\n};\n","import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// import * as routes from \"../constants/routes\";\nimport \"./Navigation.css\";\nimport logo from \"./global/img/logotipo-lux-login.png\";\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed-top\">\n        {/* eslint-disable-next-line */}\n        <a className=\"navbar-brand\" href=\"#\">\n          <img\n            src={logo}\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"lux-icon\"\n          />\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li className=\"nav-item dropdown\">\n              {/* eslint-disable-next-line */}\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdownMenuLink\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Bienvenid@{\" \"}\n                {this.props.user.displayName || this.props.user.email}\n              </a>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"navbarDropdownMenuLink\"\n              >\n                {/* eslint-disable-next-line */}\n                <a className=\"avatar-container\" href=\"#\">\n                  <img\n                    src={this.props.user.photoURL}\n                    id=\"avatar\"\n                    alt=\"profile-avatar\"\n                  />\n                </a>\n                <p className=\"dropdown-item bold\">Correo:</p>\n                <p className=\"dropdown-item\">{this.props.user.displayName}</p>\n                <button\n                  id=\"logout\"\n                  className=\"dropdown-item btn btn-primary\"\n                  onClick={() => this.props.onLogout()}\n                >\n                  Cerrar sesión\n                </button>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport { firebase } from \"../firebase\";\n\nimport './PostInput.css'\n\nclass PostInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPost: \"\",\n      username: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const postRef = firebase.db.ref(\"posts\");\n    const post = {\n      postText: this.state.currentPost,\n      user: this.props.user.displayName || this.props.user.email\n    };\n    postRef.push(post);\n    this.setState({\n      currentPost: \"\",\n      username: \"\"\n    });\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  render() {\n    const isInvalid = this.state.currentPost.trim() === '';\n\n    return (\n      <section className=\"col-8 offset-2 col-md-4 offset-md-1 justify-content-around post-entry\">\n        <form onSubmit={this.handleSubmit}>\n          <h3>¿Qué te dio luz este día?</h3>\n          <textarea\n            type=\"text\"\n            name=\"currentPost\"\n            placeholder=\"Escribelo aquí\"\n            onChange={this.handleChange}\n            value={this.state.currentPost}\n          />\n          <button disabled={isInvalid}>Compartir</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default PostInput;\n","import React, { Component } from \"react\";\nimport { firebase } from \"../firebase\";\n\nimport './DisplayPost.css'\n\nclass DisplayPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    const postRef = firebase.db.ref(\"posts\");\n    postRef.on(\"value\", snapshot => {\n      let posts = snapshot.val();\n      let newState = [];\n      for (let post in posts) {\n        newState.push({\n          id: post,\n          postText: posts[post].postText,\n          user: posts[post].user\n        });\n      }\n      this.setState({\n        posts: newState\n      });\n    });\n  }\n\n  removePost(postId) {\n    const postRef = firebase.db.ref(`/posts/${postId}`);\n    postRef.remove();\n  }\n\n  render() {\n    return (\n      <section className=\"col-8 offset-2 col-md-6 offset-md-0\">\n        <div className=\"display-posts\">\n          <ul>\n            {this.state.posts\n              .map(post => {\n                return (\n                  <li key={post.id}>\n                    <p className=\"text-color\">{post.user}</p>\n                    <p className=\"bolder\">{post.postText}</p>\n                    <hr/>\n                    {post.user === (this.props.user.displayName ||\n                    this.props.user.email) ? (\n                      <button className=\"button-post\" onClick={() => this.removePost(post.id)}>\n                        Borrar\n                      </button>\n                    ) : null }\n                  </li>\n                );\n              })\n              .reverse()}\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default DisplayPost;\n","import React, { Component } from \"react\";\nimport { firebase, auth } from '../firebase';\n\nimport Navigation from \"./Navigation\";\nimport PostInput from \"./PostInput\";\nimport DisplayPost from \"./DisplayPost\";\nimport SignInPage from \"./SignIn\";\n\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n    }\n  }\n\n  componentDidMount(){\n    firebase.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({user});\n      }\n    });\n  }\n\n  logout = () => {\n    console.log('Entro a logout');\n    auth.doSignOut()\n      .then(() => {\n        this.setState({\n          user: null\n        });\n      });\n  }\n\n  login = async () => {\n    console.log('Entro a login');\n    await firebase.auth.signInWithRedirect(firebase.provider)\n    .then(result => {\n      const user = result.user;\n      this.setState({user})\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.user ?\n        (<React.Fragment>\n        <Navigation onLogin={this.login} onLogout={this.logout} user={this.state.user} />\n        <div className=\"row mt-5\">\n          <PostInput user={this.state.user} />\n          <DisplayPost user={this.state.user} />\n        </div>\n        </React.Fragment>)\n        :\n        (<SignInPage onLogin={this.login} onLogout={this.logout} user={this.state.user}/>)\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\n\nconst AccountPage = () =>\n  <div>\n    <h1>Account Page</h1>\n  </div>\n\nexport default AccountPage;","import React from \"react\";\n\nconst Page404 = () => (\n  <div>\n    <h4>Ouh!</h4>\n    <p>\n      Lo sentimos, al parecer no podemos encontrar la página que estas buscando\n    </p>\n    <p>Error: 404</p>\n  </div>\n);\n\nexport default Page404;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport SignUpPage from \"./SignUp\";\nimport SignInPage from \"./SignIn\";\nimport PasswordForgetPage from \"./PasswordForget\";\nimport HomePage from \"./Home\";\nimport AccountPage from \"./Account\";\nimport Page404 from \"./Page404\";\n\nimport * as routes from \"../constants/routes\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route exact path={routes.SIGN_UP} component={SignUpPage} />\n      <Route exact path={routes.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={routes.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={routes.HOME} component={HomePage} />\n      <Route exact path={routes.ACCOUNT} component={AccountPage} />\n      <Route component={Page404} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// Routes in the app\n\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PAGE404 = '/not-found-404';\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// eslint-disable-next-line\nimport $ from 'jquery';\n// eslint-disable-next-line\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}